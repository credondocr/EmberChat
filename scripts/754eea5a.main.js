!function(){window.EmberChat=Ember.Application.create({LOG_TRANSITIONS:!0,server:{host:window.location.hostname,port:"8589",path:window.location.pathname+"emberchat/socket"},encryption:{rsa:512}})}(),function(){EmberChat.ChromeAppEnvironment=Ember.Object.create({notificationId:1,init:function(){this.isEnv()&&chrome.idle.onStateChanged.addListener(this.onStateChanged)},isEnv:function(){return"undefined"==typeof chrome?!1:chrome.app.getIsInstalled()},newNotification:function(a,b,c){if(!this.isEnv())return!1;if(EmberChat.DefaultEnvironment.get("inFocus"))return!1;c||(c=parseInt(this.get("notificationId"),"string"),this.set("notificationId",c+1));var d={type:"basic",title:a,message:b,iconUrl:"images/static/icon-48.png"};chrome.notifications.create(c.toString(),d,function(){})},onStateChanged:function(){}})}(),function(){EmberChat.DefaultEnvironment=Ember.Object.create({inFocus:!0,init:function(){var a=this;window.onfocus=function(){a.set("inFocus",!0)},window.onblur=function(){a.set("inFocus",!1)}},newNotification:function(a,b,c){EmberChat.ChromeAppEnvironment.isEnv()&&EmberChat.ChromeAppEnvironment.newNotification(a,b,c),EmberChat.NodeWebkitEnvironment.isEnv()&&EmberChat.NodeWebkitEnvironment.newNotification(a,b,c)},onConnected:function(){EmberChat.NodeWebkitEnvironment.isEnv()&&EmberChat.NodeWebkitEnvironment.onConnected()}})}(),function(){EmberChat.NodeWebkitEnvironment=Ember.Object.create({init:function(){},isEnv:function(){return"undefined"!=typeof process&&"undefined"!=typeof process.versions&&"undefined"!=typeof process.versions["node-webkit"]},newNotification:function(a,b){return this.isEnv()?(EmberChat.DefaultEnvironment.get("inFocus"),void window.LOCAL_NW.desktopNotifications.notify("app://a/images/static/icon-128.png",a,b,function(){})):!1},onConnected:function(){window.LOCAL_NW.desktopNotifications.notify("app://a/images/static/icon-128.png","EmberChat","connected",function(){})}})}(),function(){EmberChat.Conversation=Ember.Object.extend({name:null,id:null,content:null,newMessages:0,room:null,user:null,users:null,isEncrypted:!1,encryptionKey:null,encryptionValidated:!1,isConversationDisabled:function(){return this.get("isEncrypted")&&!this.get("encryptionValidated")?!0:!1}.property("isEncrypted","encryptionValidated"),requestEncryptedKey:function(){if(!this.get("user").get("online"))return void this.set("isEncrypted",!1);if(this.get("isEncrypted")&&!this.get("encryptionKey")){var a=new JSEncrypt({default_key_size:EmberChat.encryption.rsa}),b={type:"KeyExchange",publicKey:a.getPublicKeyB64(),user:this.get("user").get("id")};EmberChat.MessageProcessor.processOutgoing(b),this.set("rsaEncrypt",a)}else if(this.get("isEncrypted")===!1){var c={type:"KeyExchange",disable:!0,user:this.get("user").get("id")};EmberChat.MessageProcessor.processOutgoing(c),this.set("encryptionKey",null)}}.observes("isEncrypted"),disableEncryption:function(){this.set("isEncrypted",!1),this.set("encryptionKey",null),this.set("encryptionValidated",!1)}.observes("user.online"),addContent:function(a){if(this.get("encryptionKey"))for(var b=0;b<a.length;b++){var c=a[b];if(c.content&&c.type&&"msg"===c.type)try{c.content=GibberishAES.dec(c.content,this.get("encryptionKey")),c.encrypted=!0}catch(d){}}a[0]&&a[0].content&&this.get("user")&&a[0].user!==EmberChat.Session.get("user").get("name")&&EmberChat.DefaultEnvironment.newNotification(this.get("name"),a[0].content),this.get("content")?this.get("content").pushObjects(a):this.set("content",Ember.A(a))}})}(),function(){EmberChat.Participant=Ember.Object.extend({name:null,id:null,newMessages:0})}(),function(){EmberChat.Room=EmberChat.Participant.extend({})}(),function(){EmberChat.User=EmberChat.Participant.extend({})}(),function(){EmberChat.AbstractMessage=Ember.Object.extend({process:function(){throw new Ember.Error("Process method needs do be implemented in "+this.constructor.toString())}})}(),function(){EmberChat.AbstractListMessage=EmberChat.AbstractMessage.extend({process:function(){var a=this.get("content");return Ember.assert(this.constructor.toString()+" contains no content!","object"==typeof a),Ember.assert(this.constructor.toString()+" needs a listContainer property","object"==typeof this.get("listContainer")),this.updateListContainer(a,this.get("listContainer")),!0},createListElement:function(){throw new Ember.Error("Method createListElement needs do be implemented in "+this.constructor.toString())},updateListContainer:function(a,b){for(var c=0;c<b.length;c++){var d=a.findBy("id",b[c].get("id"));d?(b[c].setProperties(d),a.removeObject(d)):b.removeObject(b[c])}this.createListElement(a,b)}})}(),function(){EmberChat.ConversationMessage=EmberChat.AbstractMessage.extend({process:function(){var a=this.getConversationObject();return a.get("isDisplayed")||this.doBackgroundTasks(a),this.fillConversationObject(a),!0},getConversationObject:function(){throw new Ember.Error("Method getConversationObject needs do be implemented in "+this.constructor.toString())},fillConversationObject:function(a){var b=this.get("content");Ember.assert("ConversationMessage contains no content!","object"==typeof b),a.addContent(b)},doBackgroundTasks:function(a){a.set("newMessages",parseInt(a.get("newMessages"))+1)}})}(),function(){EmberChat.UserConversationMessage=EmberChat.ConversationMessage.extend({getConversationObject:function(){var a=EmberChat.Session.findUserById(this.get("user").id);Ember.assert("ConversationMessage: Could not get user by id "+this.get("user"),"object"==typeof a);var b=EmberChat.Session.findConversationById(a.get("id"));return b||(b=EmberChat.Conversation.create({id:a.get("id"),name:a.get("name"),user:a}),EmberChat.Session.get("conversations").pushObject(b)),b}})}(),function(){EmberChat.KeyExchangeMessage=EmberChat.UserConversationMessage.extend({acknowledgeWord:"Acknowledge",process:function(){this.get("publicKey")&&this.generateKeyAndTransmit(),this.get("encryptedKey")&&this.receiveKeyAndDecrypt(),this.get("disable")&&this.disableEncryption(),this.get("acknowledge")&&this.acknowledgeEncryption()},acknowledgeEncryption:function(){var a=this.getConversationObject();try{var b=GibberishAES.dec(this.get("acknowledge"),a.get("encryptionKey"))}catch(c){}b===this.get("acknowledgeWord")?a.set("encryptionValidated",!0):(Ember.warn("Could not acknowledgeEncryption "+this.constructor.toString()),a.disableEncryption())},disableEncryption:function(){var a=this.getConversationObject();a.disableEncryption()},receiveKeyAndDecrypt:function(){var a=this.getConversationObject(),b=a.get("rsaEncrypt");if(!b)throw new Ember.Error("Conversation has no instance of JSEncrypt in "+this.constructor.toString());var c=b.decrypt(this.get("encryptedKey"));if(c){a.set("encryptionKey",c),a.set("encryptionValidated",!0);var d={};d.acknowledge=GibberishAES.enc(this.get("acknowledgeWord"),c),d.user=a.get("user").get("id"),d.type="KeyExchange",EmberChat.MessageProcessor.processOutgoing(d)}else Ember.warn("Could not receiveKeyAndDecrypt "+this.constructor.toString()),a.disableEncryption()},generateKeyAndTransmit:function(){var a=this.getConversationObject(),b=this.generateKey();a.set("encryptionKey",b),a.set("isEncrypted",!0);var c=new JSEncrypt({default_key_size:EmberChat.encryption.rsa});c.setPublicKey(this.get("publicKey"));var d=c.encrypt(b);if(d){var e={type:"KeyExchange",user:this.get("user").id,encryptedKey:d};EmberChat.MessageProcessor.processOutgoing(e),a.set("encryptionValidated",!1)}else a.disableEncryption(),Ember.warn("Could not generateKeyAndTransmit "+this.constructor.toString());return!0},generateKey:function(){var a=EmberChat.encryption.rsa/8-11,b=new JSEncrypt({default_key_size:512}),c=b.getPrivateKeyB64();return Sha256.hash(c).substr(0,a)}})}(),function(){EmberChat.RoomConversationMessage=EmberChat.ConversationMessage.extend({getConversationObject:function(){var a=EmberChat.Session.findRoomById(this.get("room").id);Ember.assert("ConversationMessage: Could not get room by id "+this.get("room"),"object"==typeof a);var b=EmberChat.Session.findConversationById(a.get("id"));return b||(b=EmberChat.Conversation.create({id:a.get("id"),name:a.get("name"),room:a}),EmberChat.Session.get("conversations").pushObject(b)),b}})}(),function(){EmberChat.RoomJoinMessage=EmberChat.RoomConversationMessage.extend({process:function(){var a=EmberChat.User.create(this.get("user"));if(a.get("id")===EmberChat.Session.get("user").get("id"))return!1;var b=this.getConversationObject();null===b.get("users")&&b.set("users",Ember.A()),this.roomUsers(b);var c=this.userChange(b);return c?(this.publishContent(b,c),!0):!1},publishContent:function(a,b){return this.get("user").id===EmberChat.Session.get("user").get("id")?!1:(a.addContent(b),!0)},userChange:function(a){var b=EmberChat.User.create(this.get("user")),c=EmberChat.Session.findUserById(b.get("id"));return c?a.get("users").findBy("id",c.get("id"))?null:(a.get("users").pushObject(c),this.createContent(c)):!1},roomUsers:function(a){var b=this.get("users");if(b)for(var c=0;c<b.length;c++){var d=EmberChat.Session.findUserById(b[c].id);d&&(a.get("users").findBy("id",d.get("id"))||a.get("users").pushObject(d))}},createContent:function(a){return[{info:!0,content:a.get("name")+" joined"}]}})}(),function(){EmberChat.RoomLeaveMessage=EmberChat.RoomJoinMessage.extend({process:function(){var a=EmberChat.User.create(this.get("user"));if(a.get("id")===EmberChat.Session.get("user").get("id"))return!1;var b=this.getConversationObject(),c=EmberChat.Session.findUserById(a.get("id"));return c?(b.get("users").removeObject(c),this.publishContent(b,this.createContent(c)),!0):!1},createContent:function(a){return[{info:!0,content:a.get("name")+" left"}]}})}(),function(){EmberChat.RoomListMessage=EmberChat.AbstractListMessage.extend({listContainerBinding:"EmberChat.Session.availableRooms",createListElement:function(a,b){for(var c=0;c<a.length;c++)b.pushObject(EmberChat.User.create(a[c]))}})}(),function(){EmberChat.SettingsMessage=EmberChat.AbstractMessage.extend({process:function(){EmberChat.Session.get("user");return Ember.assert("Settings message contains no user data!",this.get("user")),EmberChat.Session.set("user",EmberChat.User.create(this.get("user"))),Ember.$(document).attr("title","EC: "+EmberChat.Session.get("user").get("name")),this.get("token")&&(localStorage.token=this.get("token")),EmberChat.Session.set("authenticated",!0),Ember.Instrumentation.instrument("signal.authenticated"),!0}})}(),function(){EmberChat.UserListMessage=EmberChat.AbstractListMessage.extend({listContainerBinding:"EmberChat.Session.availableUsers",createListElement:function(a,b){for(var c=0;c<a.length;c++)b.pushObject(EmberChat.Room.create(a[c]))}})}(),function(){EmberChat.MessageProcessor=Ember.Object.create({processIncoming:function(a){var b=JSON.parse(a.data);switch(b.type){case"Settings":return EmberChat.SettingsMessage.create(b).process();case"UserList":return EmberChat.UserListMessage.create(b).process();case"RoomList":return EmberChat.RoomListMessage.create(b).process();case"UserConversation":return EmberChat.UserConversationMessage.create(b).process();case"RoomConversation":return EmberChat.RoomConversationMessage.create(b).process();case"RoomJoin":return EmberChat.RoomJoinMessage.create(b).process();case"RoomLeave":return EmberChat.RoomLeaveMessage.create(b).process();case"KeyExchange":return EmberChat.KeyExchangeMessage.create(b).process();default:return Ember.warn("Unknown message type: "+b.type),!1}},processOutgoing:function(a){"object"==typeof a&&EmberChat.Socket.sendMessage(JSON.stringify(a))}})}(),function(){EmberChat.Session=Ember.Object.create({authenticated:!1,user:EmberChat.User.create(),availableUsers:Ember.A(),availableRooms:Ember.A(),conversations:Ember.A(),findConversationById:function(a){return this.get("conversations").findBy("id",a)},findUserById:function(a){return this.get("availableUsers").findBy("id",a)},findRoomById:function(a){return this.get("availableRooms").findBy("id",a)},onOfflineTasks:function(){this.get("availableUsers").forEach(function(a){Ember.set(a,"online",!1)}),this.set("conversations",Ember.A()),this.set("authenticated",!1)},authenticate:function(){if(localStorage.token){var a={type:"authentication",token:localStorage.token};EmberChat.MessageProcessor.processOutgoing(a)}}})}(),function(){EmberChat.Socket=Ember.Object.create({hostBinding:"EmberChat.server.host",portBinding:"EmberChat.server.port",pathBinding:"EmberChat.server.path",online:!1,socket:null,connect:function(){if("undefined"==typeof EmberChat.socketDisabled||EmberChat.socketDisabled!==!0){var a=this;if(window.WebSocket=window.WebSocket||window.MozWebSocket,!window.WebSocket)return void Ember.warn("Browser does not support WebSockets");var b=new WebSocket("ws://"+this.get("host")+":"+this.get("port")+this.get("path"));b.onopen=function(){a.onOpen()},b.onerror=function(c){b.close(),a.onError(c)},b.onclose=function(){a.onClose()},b.onmessage=function(b){a.onMessage(b)},this.set("socket",b)}},sendMessage:function(a){this.get("online")&&this.get("socket").send(a)},onOpen:function(){this.set("online",!0),EmberChat.Session.authenticate(),EmberChat.DefaultEnvironment.onConnected()},onError:function(a){Ember.warn("Socket error: "+a),console.dir(a),this.set("online",!1)},onClose:function(){this.set("online",!1),EmberChat.Session.onOfflineTasks()},onMessage:function(a){EmberChat.MessageProcessor.processIncoming(a)}})}(),function(){EmberChat.ApplicationController=Ember.ArrayController.extend({actions:{authenticate:function(){this.transitionToRoute("authenticate")}}})}(),function(){EmberChat.AuthenticateController=Ember.Controller.extend({auth:null,password:null,keep:!1,actions:{authenticate:function(){if(this.get("auth")&&this.get("password")){var a={type:"authentication",auth:this.get("auth"),password:Sha256.hash(this.get("password")),keep:this.get("keep")};this.set("password",""),EmberChat.MessageProcessor.processOutgoing(a)}else this.set("message","You should add some credentials ;)")},devAuth:function(a){var b={type:"authentication",auth:a,password:Sha256.hash("password"),keep:!1};EmberChat.MessageProcessor.processOutgoing(b)}}})}(),function(){EmberChat.ConversationController=Ember.Controller.extend({})}(),function(){EmberChat.ConversationRoomController=EmberChat.ConversationController.extend({actions:{send:function(){var a={content:this.get("text")};a.room=this.get("conversation").get("id"),a.type="RoomConversation",EmberChat.MessageProcessor.processOutgoing(a),this.set("text","")},close:function(){var a={type:"RoomLeave",room:this.get("conversation").get("room").get("id")};EmberChat.MessageProcessor.processOutgoing(a),EmberChat.Session.get("conversations").removeObject(this.get("conversation")),this.get("conversation").destroy(),this.transitionToRoute("index")}}})}(),function(){EmberChat.ConversationUserController=EmberChat.ConversationController.extend({actions:{send:function(){var a={};this.get("conversation").get("encryptionKey")?(a.content=GibberishAES.enc(this.get("text"),this.get("conversation").get("encryptionKey")),a.encrypted=!0):a.content=this.get("text"),a.user=this.get("conversation").get("user").get("id"),a.type="UserConversation",EmberChat.MessageProcessor.processOutgoing(a),this.set("text","")},close:function(){EmberChat.Session.get("conversations").removeObject(this.get("conversation")),this.get("conversation").destroy(),this.transitionToRoute("index")}}})}(),function(){EmberChat.RoomsController=Ember.ArrayController.extend({})}(),function(){EmberChat.ApplicationAdapter=DS.FixtureAdapter}(),function(){EmberChat.ApplicationRoute=Ember.Route.extend({setupController:function(){}})}(),function(){EmberChat.AuthenticateRoute=Ember.Route.extend({redirect:function(){EmberChat.Session.get("authenticated")&&this.transitionTo("index")},setupController:function(){var a=this;Ember.run.later(this,function(){EmberChat.Socket.connect()},100),Ember.Instrumentation.subscribe("signal.authenticated",{before:function(){a.transitionTo("rooms")},after:function(){}})}})}(),function(){EmberChat.AuthenticatedRoute=Ember.Route.extend({afterModel:function(a,b){EmberChat.Session.get("authenticated")||(EmberChat.attemptedTransition=b,this.transitionTo("authenticate")),this.redirect(a)}})}(),function(){EmberChat.ConversationRoute=EmberChat.AuthenticatedRoute.extend({setupController:function(){},setupConversation:function(a){a.set("isDisplayed",!0),a.set("newMessages",0)},model:function(a){return"object"==typeof a&&a.id?EmberChat.Session.findConversationById(a.id):null},actions:{willTransition:function(){this.controller.get("conversation").set("isDisplayed",!1)}}})}(),function(){EmberChat.ConversationRoomRoute=EmberChat.ConversationRoute.extend({setupController:function(a,b){if(a.set("conversation",b),!b.get("content")){var c={type:"RoomJoin",room:b.get("room").get("id")};EmberChat.MessageProcessor.processOutgoing(c)}},model:function(a){var b=this._super(a);if(!b){var c=EmberChat.Session.findRoomById(a.id);if(!c)return this.transitionTo("index"),null;b=EmberChat.Conversation.create({id:a.id,name:c.get("name"),room:c}),EmberChat.Session.get("conversations").pushObject(b)}return this.setupConversation(b),this.controllerFor("conversation").set("conversation",b),b}})}(),function(){EmberChat.ConversationUserRoute=EmberChat.ConversationRoute.extend({setupController:function(a,b){if(a.set("conversation",b),!b.get("content")){var c=EmberChat.SettingsMessage.create({type:"requestHistory",user:b.get("user").get("id")});EmberChat.MessageProcessor.processOutgoing(c)}},model:function(a){var b=this._super(a);if(!b){var c=EmberChat.Session.findUserById(a.id);if(!c)return this.transitionTo("index"),null;b=EmberChat.Conversation.create({id:a.id,name:c.get("name"),user:c}),EmberChat.Session.get("conversations").pushObject(b)}return this.setupConversation(b),this.controllerFor("conversation").set("conversation",b),b}})}(),function(){EmberChat.IndexRoute=EmberChat.AuthenticatedRoute.extend({redirect:function(){this.transitionTo("rooms")}})}(),function(){EmberChat.RoomsRoute=EmberChat.AuthenticatedRoute.extend({model:function(){return EmberChat.Session.get("availableRooms")}})}(),function(){EmberChat.ConversationListComponent=Ember.Component.extend({conversationsBinding:"EmberChat.Session.conversations"})}(),function(){EmberChat.SessionInfoComponent=Ember.Component.extend({isOnlineBinding:"EmberChat.Socket.online",userBinding:"EmberChat.Session.user",actions:{connect:function(){EmberChat.Socket.connect(),this.sendAction("authenticate")},disconnect:function(){EmberChat.Socket.get("socket").close()}}})}(),function(){EmberChat.UserListComponent=Ember.Component.extend({})}(),function(){EmberChat.ConversationView=Ember.View.extend({classNames:[""],conversationChanged:function(){this.scrollContent()}.observes("controller.conversation.content.@each"),scrollContent:function(){var a=this;setTimeout(function(){var b=Ember.$(a.get("element")).find(".conversation-content");b&&b[0]&&b.animate({scrollTop:b[0].scrollHeight},"fast")},10)}})}(),function(){EmberChat.ConversationRoomView=Ember.View.extend({didInsertElement:function(){Ember.$(this.get("element")).find("[data-toggle='tooltip']").tooltip(),Ember.$(this.get("element")).find("input[type='text']").focus()}})}(),function(){EmberChat.ConversationUserView=Ember.View.extend({didInsertElement:function(){Ember.$(this.get("element")).find("[data-toggle='tooltip']").tooltip(),Ember.$(this.get("element")).find("input[type='text']").focus()}})}(),function(){EmberChat.Router.map(function(){this.route("authenticate"),this.route("rooms"),this.resource("conversation",function(){this.route("user",{path:"user/:id"}),this.route("room",{path:"room/:id"})})})}();