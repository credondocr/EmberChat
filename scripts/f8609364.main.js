!function(){window.EmberChat=Ember.Application.create({LOG_TRANSITIONS:!0,versionWebApp:"0.1.0",versionServer:null,homepageUrl:"http://mwitte.github.io/EmberChat/",githubUrl:"http://github.com/mwitte/EmberChat.git",server:{host:window.location.hostname,port:"8589",path:window.location.pathname+"emberchat/socket"},encryption:{rsa:512}})}(),function(){EmberChat.server={host:"appserver.local",port:"8589",path:"/emberchat/socket"}}(),function(){EmberChat.ChromeAppEnvironment=Ember.Object.create({notificationId:1,init:function(){this.isEnv()&&chrome.idle.onStateChanged.addListener(this.onStateChanged)},isEnv:function(){return"undefined"==typeof chrome?!1:chrome.app.getIsInstalled()},newNotification:function(a,b,c){if(!this.isEnv())return!1;if(EmberChat.DefaultEnvironment.get("inFocus"))return!1;c||(c=parseInt(this.get("notificationId"),"string"),this.set("notificationId",c+1));var d={type:"basic",title:a,message:b,iconUrl:"images/static/icon-48.png"};chrome.notifications.create(c.toString(),d,function(){})},onStateChanged:function(){}})}(),function(){EmberChat.DefaultEnvironment=Ember.Object.create({inFocus:!0,init:function(){var a=this;window.onfocus=function(){a.set("inFocus",!0)},window.onblur=function(){a.set("inFocus",!1)}},newNotification:function(a,b,c){EmberChat.ChromeAppEnvironment.isEnv()&&EmberChat.ChromeAppEnvironment.newNotification(a,b,c),EmberChat.NodeWebkitEnvironment.isEnv()&&EmberChat.NodeWebkitEnvironment.newNotification(a,b,c)},onConnected:function(){EmberChat.NodeWebkitEnvironment.isEnv()&&EmberChat.NodeWebkitEnvironment.onConnected()},openExternal:function(a){if("undefined"==typeof a)throw new Ember.Error("Now url provided for external opening. "+this.constructor.toString());EmberChat.NodeWebkitEnvironment.isEnv()?EmberChat.NodeWebkitEnvironment.openExternal(a):window.open(a,"_blank")}})}(),function(){EmberChat.NodeWebkitEnvironment=Ember.Object.create({init:function(){},isEnv:function(){return"undefined"!=typeof process&&"undefined"!=typeof process.versions&&"undefined"!=typeof process.versions["node-webkit"]},newNotification:function(a,b){return this.isEnv()?(EmberChat.DefaultEnvironment.get("inFocus"),void window.LOCAL_NW.desktopNotifications.notify("app://a/images/static/icon-128.png",a,b,function(){})):!1},onConnected:function(){window.LOCAL_NW.desktopNotifications.notify("app://a/images/static/icon-128.png","EmberChat","connected",function(){})},openExternal:function(a){if(this.isEnv()){var b=require("nw.gui");b.Shell.openExternal(a)}}})}(),function(){window.addCss=function(a,b,c){c=c?c:!1;var d=Ember.$("#overwrite-css-container");0===d.length&&(d=Ember.$('<div id="overwrite-css-container"></div>'),d.hide(),d.appendTo(Ember.$("body")));var e=(a+c).split("").reduce(function(a,b){return a=(a<<5)-a+b.charCodeAt(0),a&a},0),f=d.find('div[data-class="'+e+'"]');0===f.length&&(f=Ember.$('<div data-class="'+e+'"></div>'),f.appendTo(d));var g=b.join("; \n");g=a+" {\n"+g+"; \n}\n",c&&(g="@media "+c+" {\n"+g+"}"),f.html('<style type="text/css">\n'+g+"\n</style>")}}(),function(){EmberChat.Conversation=Ember.Object.extend({name:null,id:null,content:null,sentContent:Ember.A(),newMessages:0,closed:!1,user:null,room:null,users:null,isEncrypted:!1,encryptionKey:null,encryptionValidated:!1,keyLength:{length:1024,label:"1024 bit"},keyLengths:[{length:512,label:"512 bit < 0.2 sec"},{length:1024,label:"1024 bit < 0.5 sec"},{length:2048,label:"2048 bit > 2 sec"}],addSentContent:function(a){var b=this.get("sentContent");b.length>20&&b.shiftObject(),b.forEach(function(c,d){c===a&&b.removeAt(d)}),b.pushObject(a)},isConversationDisabled:function(){return this.get("isEncrypted")&&!this.get("encryptionValidated")?!0:!1}.property("isEncrypted","encryptionValidated"),requestEncryptedKey:function(){var a=this;Ember.run.later(function(){if(!a.get("user").get("online"))return void a.set("isEncrypted",!1);if(a.get("isEncrypted")&&!a.get("encryptionKey")){var b=new JSEncrypt({default_key_size:a.get("keyLength").length}),c={type:"User\\KeyExchange",publicKey:b.getPublicKeyB64(),length:a.get("keyLength").length,user:a.get("user").get("id")};EmberChat.MessageProcessor.processOutgoing(c),a.set("rsaEncrypt",b)}else if(a.get("isEncrypted")===!1){var d={type:"User\\KeyExchange",disable:!0,user:a.get("user").get("id")};EmberChat.MessageProcessor.processOutgoing(d),a.set("encryptionKey",null)}},100)}.observes("isEncrypted"),disableEncryption:function(){this.set("isEncrypted",!1),this.set("encryptionKey",null),this.set("encryptionValidated",!1)}.observes("user.online"),applyUserToContent:function(a){if(a.user){if(a.user===EmberChat.Session.get("user").get("id"))return void(a.user=EmberChat.Session.get("user"));var b=EmberChat.Session.findUserById(a.user);b&&(a.user=b)}},addContent:function(a,b){for(var c=0;c<a.length;c++){var d=a[c];if(d.content&&d.type&&"msg"===d.type&&this.get("encryptionKey"))try{d.content=GibberishAES.dec(d.content,this.get("encryptionKey")),d.encrypted=!0}catch(e){}this.applyUserToContent(d)}if(a[0]&&a[0].content&&this.get("user")&&a[0].user.get("id")!==EmberChat.Session.get("user").get("id")&&EmberChat.DefaultEnvironment.newNotification(this.get("name"),a[0].content),this.get("content"))if(this.get("content").length>=100&&this.get("content").shiftObject(),b){for(var f=this.get("content"),g=0;g<a.length;g++)for(var h=0;h<f.length;h++)a[g].date===f[h].date&&a[g].content===f[h].content&&a.removeAt(g);this.get("content").unshiftObjects(a)}else this.get("content").pushObjects(a);else if(this.set("content",Ember.A(a)),this.get("user")){var i=EmberChat.ReceiveMsg.Settings.create({type:"User\\RequestHistory",user:this.get("id")});EmberChat.MessageProcessor.processOutgoing(i)}}})}(),function(){EmberChat.Participant=Ember.Object.extend({name:null,id:null,newMessages:0})}(),function(){EmberChat.Room=EmberChat.Participant.extend({isRoom:!0})}(),function(){EmberChat.User=EmberChat.Participant.extend({forename:null,surname:null,name:function(){return this.get("forename")+" "+this.get("surname")}.property("forename","surname")})}(),function(){EmberChat.Advice=Ember.Object.create({})}(),function(){EmberChat.ReceiveMsg={},EmberChat.ReceiveMsg.Abstract=Ember.Object.extend({process:function(){throw new Ember.Error("Process method needs do be implemented in "+this.constructor.toString())}})}(),function(){EmberChat.ReceiveMsg.AbstractList=EmberChat.ReceiveMsg.Abstract.extend({process:function(){var a=this.get("content");return Ember.assert(this.constructor.toString()+" contains no content!","object"==typeof a),Ember.assert(this.constructor.toString()+" needs a listContainer property","object"==typeof this.get("listContainer")),this.updateListContainer(a,this.get("listContainer")),!0},createListElement:function(){throw new Ember.Error("Method createListElement needs do be implemented in "+this.constructor.toString())},updateListContainer:function(a,b){for(var c=0;c<b.length;c++){var d=a.findBy("id",b[c].get("id"));d?(b.arrayContentWillChange(c),b[c].setProperties(d),b.arrayContentDidChange(c),a.removeObject(d)):b.removeObject(b[c])}this.createListElement(a,b)}})}(),function(){EmberChat.ReceiveMsg.AdminAction=EmberChat.ReceiveMsg.Abstract.extend({process:function(){try{Ember.Instrumentation.instrument("signal.admin."+this.get("action"),this)}catch(a){}}})}(),function(){EmberChat.ReceiveMsg.Connected=EmberChat.ReceiveMsg.Abstract.extend({process:function(){try{EmberChat.set("versionServer",this.get("version")),EmberChat.get("versionWebApp")<EmberChat.get("versionServer")?EmberChat.set("versionConflict",!0):EmberChat.set("versionConflict",!1),EmberChat.Session.set("serverStartTime",this.get("serverStartTime")),Ember.Instrumentation.instrument("signal.connected")}catch(a){}}})}(),function(){EmberChat.ReceiveMsg.Conversation=EmberChat.ReceiveMsg.Abstract.extend({process:function(){var a=this.getConversationObject();return a.get("isDisplayed")||this.doBackgroundTasks(a),this.fillConversationObject(a),!0},getConversationObject:function(){throw new Ember.Error("Method getConversationObject needs do be implemented in "+this.constructor.toString())},fillConversationObject:function(a){var b=this.get("content");Ember.assert("ConversationMessage contains no content!","object"==typeof b),a.addContent(b,this.get("history"))},doBackgroundTasks:function(a){this.get("history")||(EmberChat.Session.get("conversations").arrayContentWillChange(0),a.set("newMessages",parseInt(a.get("newMessages"))+1),EmberChat.Session.get("conversations").arrayContentDidChange(0))}})}(),function(){EmberChat.ReceiveMsg.UserConversation=EmberChat.ReceiveMsg.Conversation.extend({getConversationObject:function(){var a=EmberChat.Session.findUserById(this.get("user").id);Ember.assert("ConversationMessage: Could not get user by id "+this.get("user"),"object"==typeof a);var b=EmberChat.Session.findConversationById(a.get("id"));return b||(b=EmberChat.Conversation.create({id:a.get("id"),name:a.get("name"),user:a}),EmberChat.Session.get("conversations").pushObject(b)),b}})}(),function(){EmberChat.ReceiveMsg.KeyExchange=EmberChat.ReceiveMsg.UserConversation.extend({acknowledgeWord:"Acknowledge",process:function(){this.get("publicKey")&&this.generateKeyAndTransmit(),this.get("encryptedKey")&&this.receiveKeyAndDecrypt(),this.get("disable")&&this.disableEncryption(),this.get("acknowledge")&&this.acknowledgeEncryption()},acknowledgeEncryption:function(){var a=this.getConversationObject();try{var b=GibberishAES.dec(this.get("acknowledge"),a.get("encryptionKey"))}catch(c){}b===this.get("acknowledgeWord")?a.set("encryptionValidated",!0):(Ember.warn("Could not acknowledgeEncryption "+this.constructor.toString()),a.disableEncryption())},disableEncryption:function(){var a=this.getConversationObject();a.disableEncryption()},receiveKeyAndDecrypt:function(){var a=this.getConversationObject(),b=a.get("rsaEncrypt");if(!b)throw new Ember.Error("Conversation has no instance of JSEncrypt in "+this.constructor.toString());var c=b.decrypt(this.get("encryptedKey"));if(c){a.set("encryptionKey",c),a.set("encryptionValidated",!0);var d={};d.acknowledge=GibberishAES.enc(this.get("acknowledgeWord"),c),d.user=a.get("user").get("id"),d.type="User\\KeyExchange",EmberChat.MessageProcessor.processOutgoing(d)}else Ember.warn("Could not receiveKeyAndDecrypt "+this.constructor.toString()),a.disableEncryption()},generateKeyAndTransmit:function(){var a=this.getConversationObject(),b=this.get("length")/8-11,c=this.generateKey(b);a.set("encryptionKey",c),a.set("isEncrypted",!0);for(var d=a.get("keyLengths"),e=0;e<d.length;e++)d[e].length===this.get("length")&&a.set("keyLength",d[e]);var f=new JSEncrypt({default_key_size:this.get("length")});f.setPublicKey(this.get("publicKey"));var g=f.encrypt(c);if(g){var h={type:"User\\KeyExchange",user:this.get("user").id,encryptedKey:g};EmberChat.MessageProcessor.processOutgoing(h),a.set("encryptionValidated",!1)}else a.disableEncryption(),Ember.warn("Could not generateKeyAndTransmit "+this.constructor.toString());return!0},generateKey:function(a){var b=new JSEncrypt({default_key_size:512}),c=Sha256.hash(b.getPrivateKeyB64()+this.makeRandomString(10));return c+=Sha256.hash(b.getPublicKeyB64()+this.makeRandomString(10)),c+=Sha256.hash(b.getPrivateKeyB64()+b.getPublicKeyB64()+this.makeRandomString(10)),c+=this.makeRandomString(a-c.length),c.substr(0,a)},makeRandomString:function(a){for(var b="",c="abcdefghijklmnopqrstuvwxyz0123456789",d=0;a>d;d++)b+=c.charAt(Math.floor(Math.random()*c.length));return b}})}(),function(){EmberChat.ReceiveMsg.ProfileUpdate=EmberChat.ReceiveMsg.Abstract.extend({process:function(){try{Ember.Instrumentation.instrument("signal.profileUpdated",this)}catch(a){}}})}(),function(){EmberChat.ReceiveMsg.RoomConversation=EmberChat.ReceiveMsg.Conversation.extend({getConversationObject:function(){var a=EmberChat.Session.findRoomById(this.get("room").id);Ember.assert("ConversationMessage: Could not get room by id "+this.get("room"),"object"==typeof a);var b=EmberChat.Session.findConversationById(a.get("id"));return b||(b=EmberChat.Conversation.create({id:a.get("id"),name:a.get("name"),room:a}),EmberChat.Session.get("conversations").pushObject(b)),b}})}(),function(){EmberChat.ReceiveMsg.RoomJoin=EmberChat.ReceiveMsg.RoomConversation.extend({process:function(){var a=EmberChat.User.create(this.get("user"));if(a.get("id")===EmberChat.Session.get("user").get("id"))return!1;var b=this.getConversationObject();null===b.get("users")&&b.set("users",Ember.A()),this.roomUsers(b);var c=this.userChange(b);return c?(this.publishContent(b,c),!0):!1},publishContent:function(a,b){return this.get("user").id===EmberChat.Session.get("user").get("id")?!1:(a.addContent(b),!0)},userChange:function(a){var b=EmberChat.User.create(this.get("user")),c=EmberChat.Session.findUserById(b.get("id"));return c?a.get("users").findBy("id",c.get("id"))?null:(a.get("users").pushObject(c),this.createContent(c)):!1},roomUsers:function(a){var b=this.get("users");if(b)for(var c=0;c<b.length;c++){var d=EmberChat.Session.findUserById(b[c].id);d&&(a.get("users").findBy("id",d.get("id"))||a.get("users").pushObject(d))}},createContent:function(a){return[{info:!0,content:a.get("name")+" joined"}]}})}(),function(){EmberChat.ReceiveMsg.RoomLeave=EmberChat.ReceiveMsg.RoomJoin.extend({process:function(){var a=EmberChat.User.create(this.get("user"));if(a.get("id")===EmberChat.Session.get("user").get("id"))return!1;var b=this.getConversationObject(),c=EmberChat.Session.findUserById(a.get("id"));return c?(b.get("users").removeObject(c),this.publishContent(b,this.createContent(c)),!0):!1},createContent:function(a){return[{info:!0,content:a.get("name")+" left"}]}})}(),function(){EmberChat.ReceiveMsg.RoomList=EmberChat.ReceiveMsg.AbstractList.extend({listContainerBinding:"EmberChat.Session.availableRooms",createListElement:function(a,b){for(var c=0;c<a.length;c++)b.pushObject(EmberChat.Room.create(a[c]))},closeRoomConversations:function(a){for(var b=EmberChat.Session.get("conversations"),c=0;c<b.length;c++)if(b[c].get("room")){for(var d=!1,e=0;e<a.length;e++){var f=a[e];f.id===b[c].get("id")&&(d=!0)}d||b[c].set("closed",!0)}},updateListContainer:function(a,b){this.closeRoomConversations(a),this._super(a,b)}})}(),function(){EmberChat.ReceiveMsg.Settings=EmberChat.ReceiveMsg.Abstract.extend({process:function(){EmberChat.Session.get("user");Ember.assert("Settings message contains no user data!",this.get("user")),EmberChat.Session.set("user",EmberChat.User.create(this.get("user"))),Ember.$(document).attr("title","EC: "+EmberChat.Session.get("user").get("name")),this.get("token")&&(localStorage.token=this.get("token")),EmberChat.Session.set("isAdmin",this.get("admin")),EmberChat.Session.set("authenticated",!0);try{Ember.Instrumentation.instrument("signal.authenticated")}catch(a){}return!0}})}(),function(){EmberChat.ReceiveMsg.UserList=EmberChat.ReceiveMsg.AbstractList.extend({listContainerBinding:"EmberChat.Session.availableUsers",createListElement:function(a,b){for(var c=0;c<a.length;c++)b.pushObject(EmberChat.User.create(a[c]))}})}(),function(){EmberChat.MessageProcessor=Ember.Object.create({processIncoming:function(a){var b=JSON.parse(a.data),c=null;try{c=EmberChat.ReceiveMsg[b.type].create(b)}catch(d){Ember.warn("Unknown message type: "+b.type)}c&&c.process()},processOutgoing:function(a){"object"==typeof a&&EmberChat.Socket.sendMessage(JSON.stringify(a))}})}(),function(){EmberChat.SessionClass=Ember.Object.extend({availableRoomsSorted:function(){var a=this.get("availableRooms").sort(function(a,b){return a.get("name")<b.get("name")?-1:a.get("name")>b.get("name")?1:0});return Ember.A(a.toArray())}.property("availableRooms.@each"),availableUsersSorted:function(){var a=this.get("availableUsers").sort(function(a,b){return a.get("online")===b.get("online")?a.get("name")<b.get("name")?-1:a.get("name")>b.get("name")?1:0:b.get("online")?1:-1});return Ember.A(a.toArray())}.property("availableUsers.@each"),conversationsSorted:function(){var a=this.get("conversations").sort(function(a,b){return a.get("user")===b.get("user")?a.get("name")<b.get("name")?-1:a.get("name")>b.get("name")?1:0:a.get("user")?1:b.get("user")?-1:0});return Ember.A(a.toArray())}.property("conversations.@each"),persistOpenConversations:function(){var a=this,b=[];Ember.run.later(function(){EmberChat.Socket.get("online")&&(a.get("conversations").forEach(function(a){a&&a.get("room")&&!a.get("closed")&&b.push({id:a.get("id")})}),localStorage.openConversations=JSON.stringify(b))},500)}.observes("conversations.@each")}),EmberChat.Session=EmberChat.SessionClass.create({authenticated:!1,isAdmin:!1,user:EmberChat.User.create(),availableUsers:Ember.A(),availableRooms:Ember.A(),conversations:Ember.A(),findConversationById:function(a){return this.get("conversations").findBy("id",a)},findUserById:function(a){return this.get("availableUsers").findBy("id",a)},findRoomById:function(a){return this.get("availableRooms").findBy("id",a)},onAuthenticated:function(){this.rejoinConversations()},rejoinConversations:function(){var a=this;if(this.get("rejoinTries")||this.set("rejoinTries",0),this.get("availableRooms").length<=0&&this.get("rejoinTries")<10)return this.set("rejoinTries",parseInt(this.get("rejoinTries"),"string")+1),void Ember.run.later(this,function(){a.onAuthenticated()},100);try{var b=JSON.parse(localStorage.openConversations);b.forEach(function(b){var c=a.findRoomById(b.id);c&&EmberChat.MessageProcessor.processOutgoing({type:"Room\\Join",room:c.get("id")})})}catch(c){}},onOfflineTasks:function(){this.get("availableUsers").forEach(function(a){Ember.set(a,"online",!1)}),this.set("conversations",Ember.A()),this.set("authenticated",!1)},authenticate:function(){if(localStorage.token){var a={type:"authentication",token:localStorage.token};EmberChat.MessageProcessor.processOutgoing(a)}},unAuthenticate:function(){delete localStorage.token}})}(),function(){EmberChat.Socket=Ember.Object.create({online:!1,socket:null,autoConnectTries:0,saveConnection:function(a,b){a&&b?(localStorage.host=a,localStorage.path=b):(delete localStorage.host,delete localStorage.path)},autoConnect:function(){var a=this;localStorage.host&&localStorage.path&&a.get("autoConnectTries")<100&&Ember.run.later(this,function(){a.get("online")===!1&&(a.connect(localStorage.host,localStorage.path),a.autoConnect(),a.set("autoConnectTries",parseInt(a.get("autoConnectTries"),"string")+1))},5e3)},connect:function(a,b){if(("undefined"==typeof EmberChat.socketDisabled||EmberChat.socketDisabled!==!0)&&a&&b){var c=this;if(window.WebSocket=window.WebSocket||window.MozWebSocket,!window.WebSocket)return void Ember.warn("Browser does not support WebSockets");this.get("socket")&&this.get("socket").close();var d=new WebSocket("ws://"+a+"/"+b);d.onopen=function(){c.onOpen()},d.onerror=function(a){d.close(),c.onError(a)},d.onclose=function(){c.onClose()},d.onmessage=function(a){c.onMessage(a)},this.set("socket",d)}},sendMessage:function(a){this.get("online")&&this.get("socket").send(a)},onOpen:function(){this.set("online",!0),this.set("autoConnectTries",0),EmberChat.DefaultEnvironment.onConnected()},onError:function(a){Ember.warn("Socket error: "+a),console.dir(a),this.set("online",!1)},onClose:function(){this.set("online",!1),EmberChat.Session.onOfflineTasks(),this.autoConnect()},onMessage:function(a){EmberChat.MessageProcessor.processIncoming(a)}})}(),function(){EmberChat.AdminCreateUserController=Ember.Controller.extend({forename:"",surname:"",auth:"",password:"",admin:!1,errorMessage:null,disabled:function(){return this.get("forename").length+this.get("surname").length>=3&&this.get("auth").length>=3&&this.get("password").length>=4?!1:!0}.property("forename","surname","auth","password"),encryptedPassword:function(){return Sha256.hash(this.get("password"))}.property("password"),preFillAuth:function(){this.set("auth",this.get("surname").toLowerCase()+this.get("forename").toLowerCase().charAt(0))}.observes("forename","surname"),reset:function(){this.set("forename",""),this.set("surname",""),this.set("auth",""),this.set("password",""),this.set("admin",!1)},updateSuccess:function(){var a=this;this.set("successMessage",'Successfully created user "'+this.get("forename")+" "+this.get("surname")+'" with auth "'+this.get("auth")+'"'),this.reset(),Ember.run.later(this,function(){a.set("successMessage",null)},5e3)},updateFailed:function(a){var b=this;this.set("errorMessage","Failed to create user: "+a),Ember.run.later(this,function(){b.set("errorMessage",null)},5e3)},actions:{save:function(){var a=this;if(this.get("password")){var b={type:"Admin\\CreateUser",user:{forename:this.get("forename"),surname:this.get("surname"),auth:this.get("auth"),password:Sha256.hash(this.get("password")),admin:this.get("admin")}};EmberChat.MessageProcessor.processOutgoing(b),Ember.Instrumentation.subscribe("signal.admin.CreateUser",{before:function(b,c,d){d.get("success")?a.updateSuccess():a.updateFailed(d.get("message"))},after:function(){}})}}}})}(),function(){EmberChat.ApplicationController=Ember.ArrayController.extend({actions:{authenticate:function(){this.transitionToRoute("authenticate")},disconnect:function(){EmberChat.Socket.saveConnection(),this.transitionToRoute("connect")},unAuthenticate:function(){EmberChat.Socket.get("socket").close(),EmberChat.Session.unAuthenticate(),this.transitionToRoute("connect")},openExternal:function(a){EmberChat.DefaultEnvironment.openExternal(a)}}})}(),function(){EmberChat.AuthenticateController=Ember.Controller.extend({auth:null,password:null,keep:!1,actions:{authenticate:function(){if(this.get("auth")&&this.get("password")){var a={type:"authentication",auth:this.get("auth"),password:Sha256.hash(this.get("password")),keep:this.get("keep")};this.set("password",""),EmberChat.MessageProcessor.processOutgoing(a)}else this.set("message","You should add some credentials ;)")},devAuth:function(a){var b={type:"authentication",auth:a,password:Sha256.hash("password"),keep:!1};EmberChat.MessageProcessor.processOutgoing(b)}}})}(),function(){EmberChat.ConnectController=Ember.Controller.extend({host:localStorage.host?localStorage.host:"appserver.local:8589",path:localStorage.path?localStorage.path:"emberchat/socket",connect:function(a,b){EmberChat.Socket.connect(a,b),Ember.run.later(this,function(){},100)},actions:{connect:function(){EmberChat.Socket.saveConnection(this.get("host"),this.get("path")),this.connect(this.get("host"),this.get("path"))}}})}(),function(){EmberChat.ConversationController=Ember.Controller.extend({historyPosition:0,sendMessage:function(a){EmberChat.MessageProcessor.processOutgoing(a),this.get("conversation").addSentContent(this.get("text")),this.set("historyPosition",0),this.set("text","")},actions:{close:function(){EmberChat.Session.get("conversations").removeObject(this.get("conversation")),this.get("conversation").destroy(),this.transitionToRoute("index")}}})}(),function(){EmberChat.ConversationRoomController=EmberChat.ConversationController.extend({actions:{send:function(){if(!this.get("conversation").get("closed")){var a={content:this.get("text")};a.room=this.get("conversation").get("id"),a.type="Room\\Conversation",this.sendMessage(a)}},close:function(){if(!this.get("conversation").get("closed")){var a={type:"Room\\Leave",room:this.get("conversation").get("room").get("id")};EmberChat.MessageProcessor.processOutgoing(a)}this._super()}}})}(),function(){EmberChat.ConversationUserController=EmberChat.ConversationController.extend({actions:{send:function(){var a={};this.get("conversation").get("encryptionKey")?(a.content=GibberishAES.enc(this.get("text"),this.get("conversation").get("encryptionKey")),a.encrypted=!0):a.content=this.get("text"),a.user=this.get("conversation").get("user").get("id"),a.type="User\\Conversation",this.sendMessage(a)},close:function(){this._super()}}})}(),function(){EmberChat.ProfileController=Ember.Controller.extend({passwordMinLength:7,errorMessage:null,currentPassword:"",password:"",passwordCheck:"",checkPassword:function(){if(this.get("currentPassword").length<=0&&this.set("errorMessage","You have to set your current password."),this.get("password").length<=this.get("passwordMinLength"))return void this.set("errorMessage","Password is too short. At least "+this.get("passwordMinLength")+" needed.");if(this.get("password")!==this.get("passwordCheck"))return void this.set("errorMessage","Passwords are not equal.");var a=Sha256.hash(this.get("password"));return a?a:void this.set("errorMessage","Could not hash given password.")},reset:function(){this.set("errorMessage",null),this.set("currentPassword",""),this.set("password",""),this.set("passwordCheck","")},updateSuccess:function(){var a=this;this.set("successMessage","Successfully updated your profile."),Ember.run.later(this,function(){a.set("successMessage",null)},3e3)},updateFailed:function(){this.set("errorMessage","Update failed.")},actions:{save:function(){var a=this,b=this.checkPassword();if(b){var c={type:"Profile\\Update",profile:{password:b,currentPassword:Sha256.hash(this.get("currentPassword"))}};EmberChat.MessageProcessor.processOutgoing(c),this.reset(),Ember.Instrumentation.subscribe("signal.profileUpdated",{before:function(b,c,d){d.get("success")?a.updateSuccess():a.updateFailed(d)},after:function(){}})}}}})}(),function(){EmberChat.RoomsController=Ember.Controller.extend({roomsBinding:"EmberChat.Session.availableRoomsSorted",updateServerStartTime:function(){var a=this;this.setServerStartTime(),Ember.run.later(function(){a.setServerStartTime(),a.updateServerStartTime()},6e4)},setServerStartTime:function(){this.set("serverUpTime",moment(EmberChat.Session.get("serverStartTime")).fromNow())}.observes("EmberChat.Session.serverStartTime")})}(),function(){EmberChat.ApplicationAdapter=DS.FixtureAdapter}(),function(){EmberChat.AuthenticatedRoute=Ember.Route.extend({afterModel:function(a,b){EmberChat.attemptedTransition=b,EmberChat.Socket.get("online")?EmberChat.Session.get("authenticated")||this.transitionTo("authenticate"):this.transitionTo("connect"),this.redirect(a)}})}(),function(){EmberChat.AdminRoute=EmberChat.AuthenticatedRoute.extend({})}(),function(){EmberChat.ApplicationRoute=Ember.Route.extend({setupController:function(){}})}(),function(){EmberChat.AuthenticateRoute=Ember.Route.extend({redirect:function(){EmberChat.Socket.get("online")||this.transitionTo("connect"),EmberChat.Session.get("authenticated")&&this.transitionTo("index")},setupController:function(a){var b=this;EmberChat.Session.authenticate(),Ember.Instrumentation.subscribe("signal.authenticated",{before:function(){EmberChat.attemptedTransition?EmberChat.attemptedTransition.retry():b.transitionTo("rooms"),EmberChat.Session.onAuthenticated(),a.set("password",""),a.set("auth","")},after:function(){}})}})}(),function(){EmberChat.ConnectRoute=Ember.Route.extend({setupController:function(a){var b=this;Ember.Instrumentation.subscribe("signal.connected",{before:function(){b.transitionTo("authenticate")},after:function(){}}),localStorage.host&&localStorage.path&&a.connect(localStorage.host,localStorage.path)}})}(),function(){EmberChat.ConversationRoute=EmberChat.AuthenticatedRoute.extend({setupController:function(){},setupConversation:function(a){a.set("isDisplayed",!0),a.set("newMessages",0)},model:function(a){return"object"==typeof a&&a.id?EmberChat.Session.findConversationById(a.id):null},actions:{willTransition:function(){this.controller.get("conversation").set("isDisplayed",!1)}}})}(),function(){EmberChat.ConversationRoomRoute=EmberChat.ConversationRoute.extend({setupController:function(a,b){if(a.set("conversation",b),!b.get("content")){var c={type:"Room\\Join",room:b.get("room").get("id")};EmberChat.MessageProcessor.processOutgoing(c)}},model:function(a){var b=this._super(a);if(!b){var c=EmberChat.Session.findRoomById(a.id);if(!c)return this.transitionTo("index"),null;b=EmberChat.Conversation.create({id:a.id,name:c.get("name"),room:c}),EmberChat.Session.get("conversations").pushObject(b)}return this.setupConversation(b),this.controllerFor("conversation").set("conversation",b),b}})}(),function(){EmberChat.ConversationUserRoute=EmberChat.ConversationRoute.extend({setupController:function(a,b){if(a.set("conversation",b),!b.get("content")){var c=EmberChat.ReceiveMsg.Settings.create({type:"User\\RequestHistory",user:b.get("user").get("id")});EmberChat.MessageProcessor.processOutgoing(c)}},model:function(a){var b=this._super(a);if(!b){var c=EmberChat.Session.findUserById(a.id);if(!c)return this.transitionTo("index"),null;b=EmberChat.Conversation.create({id:a.id,name:c.get("name"),user:c}),EmberChat.Session.get("conversations").pushObject(b)}return this.setupConversation(b),this.controllerFor("conversation").set("conversation",b),b}})}(),function(){EmberChat.IndexRoute=EmberChat.AuthenticatedRoute.extend({redirect:function(){this.transitionTo("rooms")}})}(),function(){EmberChat.ProfileRoute=EmberChat.AuthenticatedRoute.extend({})}(),function(){EmberChat.RoomsRoute=EmberChat.AuthenticatedRoute.extend({setupController:function(a){a.updateServerStartTime()}})}(),function(){EmberChat.AppAdviceComponent=Ember.Component.extend({advices:[],shiftMessage:function(a){for(var b=this.get("advices"),c=0;c<b.length;c++)a===b[c]&&b.removeAt(c)},messageSaver:function(){this.get("advices").pushObject(this.get("newAdvice"))}.observes("newAdvice"),newAdviceBinding:"EmberChat.Advice.message"})}(),function(){EmberChat.ConversationListComponent=Ember.Component.extend({isOnlineBinding:"EmberChat.Socket.online",userBinding:"EmberChat.Session.user",actions:{disconnect:function(){EmberChat.Socket.get("socket").close(),this.sendAction("disconnect")},logout:function(){this.sendAction("unAuthenticate")},openExternal:function(a){this.sendAction("openExternal",a)}},didInsertElement:function(){Ember.$(this.get("element")).find("[data-toggle='tooltip']").tooltip()}})}(),function(){EmberChat.ParticipantRemoveComponent=Ember.Component.extend({classNames:["participant-remove"],didInsertElement:function(){var a=Ember.$(this.get("element")).find(".modal");Ember.$(this.get("element")).find(".removeBtn").click(function(){return a.modal("show"),!1})},actions:{remove:function(){var a,b=this;a=this.get("participant").get("isRoom")?{type:"Admin\\RemoveRoom",room:this.get("participant")}:{type:"Admin\\RemoveUser",user:this.get("participant")},EmberChat.MessageProcessor.processOutgoing(a),Ember.$(this.get("element")).find(".removeBtn").remove(),Ember.$(this.get("element")).find(".modal").on("hidden.bs.modal",function(){b.sendAction("closeConversation")})}}})}(),function(){EmberChat.RoomCreateComponent=Ember.Component.extend({classNames:["room-create"],createSuccess:function(){var a=this;this.set("successMessage",'Successfully created room "'+this.get("name")),this.set("name",""),Ember.run.later(this,function(){a.isDestroyed||(a.set("successMessage",null),Ember.$(a.get("element")).find(".showForm").fadeIn("fast"))},5e3),Ember.$(this.get("element")).find("form").fadeOut("fast")},createFailed:function(a){var b=this;this.set("errorMessage","Failed to create room: "+a),Ember.run.later(this,function(){b.isDestroyed||b.set("errorMessage",null)},5e3)},didInsertElement:function(){var a=Ember.$(this.get("element")).find("form"),b=Ember.$(this.get("element")).find(".showForm");a.hide(),a.removeClass("hide"),b.click(function(){return b.fadeOut("fast",function(){a.fadeIn("fast")}),!1})},actions:{create:function(){var a=this;if(this.get("existingRooms").findBy("name",this.get("name")))return void this.createFailed("There is already a room with this name");Ember.Instrumentation.subscribe("signal.admin.CreateRoom",{after:function(b,c,d){d.get("success")?a.createSuccess():a.createFailed(d.get("message"))}});var b={type:"Room\\Create",room:{name:this.get("name")}};EmberChat.MessageProcessor.processOutgoing(b)}}})}(),function(){EmberChat.SessionInfoComponent=Ember.Component.extend({isOnlineBinding:"EmberChat.Socket.online",userBinding:"EmberChat.Session.user",actions:{disconnect:function(){EmberChat.Socket.get("socket").close(),this.sendAction("disconnect")},logout:function(){this.sendAction("unAuthenticate")
}}})}(),function(){EmberChat.UserInfoComponent=Ember.Component.extend({actions:{closeConversation:function(){this.sendAction("closeConversation")}}})}(),function(){EmberChat.UserListComponent=Ember.Component.extend({})}(),function(){Ember.Handlebars.registerBoundHelper("formatDate",function(a,b,c){return"undefined"==typeof c&&(c=b,b="llll"),moment(a).format(b)}),Ember.Handlebars.registerBoundHelper("renderConversationContent",function(a){Handlebars.Utils.escapeExpression(a);return a=a.replace(/(https?:\/\/[^\s]+)/g,function(a){return'<a target="_blank" href="'+a+'">'+a+"</a>"}),new Handlebars.SafeString(a)})}(),function(){EmberChat.AbstractConversationView=Ember.View.extend({historyPositionBinding:"controller.historyPosition",didInsertElement:function(){var a=this;Ember.$(this.get("element")).find("input[type=text]").unbind("keydown"),Ember.$(this.get("element")).find("input[type=text]").keydown(function(b){(38===b.keyCode||40===b.keyCode)&&a.browseHistory(b.keyCode)})},browseHistory:function(a){var b=this.get("controller.conversation").get("sentContent");38===a?b.length>this.get("historyPosition")&&this.set("historyPosition",parseInt(this.get("historyPosition"),"string")+1):this.get("historyPosition")>0&&this.set("historyPosition",parseInt(this.get("historyPosition"),"string")-1);var c=b.objectAt(b.length-this.get("historyPosition")),d="";"undefined"!=typeof c&&(d=c),this.get("controller").set("text",d)}})}(),function(){EmberChat.AdviceView=Ember.View.extend({templateName:function(){var a=this.get("content").get("type")?this.get("content").get("type"):"default";return"advice/"+a}.property(),didInsertElement:function(){var a=this;Ember.$(this.get("element")).hide(),Ember.$(this.get("element")).slideDown("fast","",function(){a.didShow()})},hideFx:function(){var a=this;Ember.$(this.get("element")).slideUp("slow","",function(){a.didHide()})},didShow:function(){var a=this;this.get("content.static")?Ember.$(this.get("element")).find(".close-action").click(function(){a.hideFx()}):Ember.run.later(function(){a.hideFx()},2e3)},didHide:function(){this.get("controller").shiftMessage(this.get("content"))}})}(),function(){EmberChat.ApplicationView=Ember.View.extend({didInsertElement:function(){Ember.$(this.get("element")).find("[data-toggle='tooltip']").tooltip(),this.adjustContainerSizes()},adjustContainerSizes:function(){var a=function(){var a=Ember.$(window).height();return 300>a?!1:(a-=10,window.addCss("div.scroll-v",["max-height: "+(a-90)+"px"],"screen and (min-width: 768px)"),window.addCss("div.scroll-v-mid",["max-height: "+(a-150)+"px"],"screen and (min-width: 768px)"),window.addCss("div.scroll-v-conversation",["max-height: "+(a-191)+"px"],"screen and (min-width: 768px)"),void window.addCss("div.scroll-v-conversation.room",["max-height: "+(a-166)+"px"],"screen and (min-width: 768px)"))};Ember.$(window).on("resize",function(){a()}),a()}})}(),function(){EmberChat.ConversationView=Ember.View.extend({classNames:[""],conversationChanged:function(){var a=this;this.scrollContent(),Ember.run.later(function(){Ember.$(a.get("element")).find(".conversation-content .content a").click(function(){return EmberChat.DefaultEnvironment.openExternal(Ember.$(this).attr("href")),!1})},20)}.observes("controller.conversation.content.@each"),scrollContent:function(){var a=this;Ember.run.later(function(){var b=Ember.$(a.get("element")).find(".conversation-content");b&&b[0]&&b.animate({scrollTop:b[0].scrollHeight},"fast")},10)}})}(),function(){EmberChat.ConversationRoomView=EmberChat.AbstractConversationView.extend({didInsertElement:function(){this._super(),Ember.$(this.get("element")).find("[data-toggle='tooltip']").tooltip(),Ember.$(this.get("element")).find("input[type='text']").focus()}})}(),function(){EmberChat.ConversationUserView=EmberChat.AbstractConversationView.extend({didInsertElement:function(){var a=this;this._super(),Ember.run.later(function(){Ember.$(a.get("element")).find("[data-toggle='tooltip']").tooltip(),Ember.$(a.get("element")).find("input[type='text']").focus()},40)}})}(),function(){EmberChat.Router.map(function(){this.route("connect"),this.route("authenticate"),this.route("rooms"),this.route("profile"),this.resource("conversation",function(){this.route("user",{path:"user/:id"}),this.route("room",{path:"room/:id"})}),this.resource("admin",function(){this.route("createUser",{path:"createUser"})})})}(),function(){EmberChat.AbstractTemplateProxy=Ember.Object.extend({templates:[],replaceTemplate:function(a,b){var c=this,d=Ember.TEMPLATES[a];this.templates[a]=d,Ember.TEMPLATES[a]=function(){return b(c.templates[a],this,arguments)}}})}(),function(){EmberChat.AdminTemplateProxy=EmberChat.AbstractTemplateProxy.create({isActive:function(){return EmberChat.Session.get("isAdmin")}}),EmberChat.AdminTemplateProxy.replaceTemplate("components/participant-remove",function(a,b,c){EmberChat.AdminTemplateProxy.isActive()&&a.apply(b,c)})}();